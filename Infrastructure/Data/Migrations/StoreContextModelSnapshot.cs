// <auto-generated />
using Infrasructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrasructure.Data.Migrations
{
    [DbContext(typeof(StoreContext))]
    partial class StoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("API.Entities.Advertising", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Area")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("EndDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Img")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StartDateTime")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Advertisings");
                });

            modelBuilder.Entity("API.Entities.DeliveryEmp", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Img")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("DeliveryEmps");
                });

            modelBuilder.Entity("API.Entities.DeliveryEvaluate", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CSResponse")
                        .HasColumnType("TEXT");

                    b.Property<string>("CSResponseDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("DeliveryEmpID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Evaluate")
                        .HasColumnType("TEXT");

                    b.Property<string>("EvaluateDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("SalesOrderID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("DeliveryEvaluates");
                });

            modelBuilder.Entity("API.Entities.Item", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("CostPrice")
                        .HasColumnType("REAL");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ItemBarcode")
                        .HasColumnType("TEXT");

                    b.Property<int>("ItemCategoryID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ItemName")
                        .HasColumnType("TEXT");

                    b.Property<float>("Qty")
                        .HasColumnType("REAL");

                    b.Property<float>("RorderPoint")
                        .HasColumnType("REAL");

                    b.Property<float>("SalePrice")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("API.Entities.ItemCatalog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Img")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsParent")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("ParentID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("ItemCatalogs");
                });

            modelBuilder.Entity("API.Entities.ItemSupplier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("CostPrice")
                        .HasColumnType("REAL");

                    b.Property<string>("ItemBarcode")
                        .HasColumnType("TEXT");

                    b.Property<float>("SalePrice")
                        .HasColumnType("REAL");

                    b.Property<int>("SupplierID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("ItemSuppliers");
                });

            modelBuilder.Entity("API.Entities.ItemUnit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemID")
                        .HasColumnType("INTEGER");

                    b.Property<float>("SmallUnitAmount")
                        .HasColumnType("REAL");

                    b.Property<int>("SmallUnitID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UnitID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("ItemUnits");
                });

            modelBuilder.Entity("API.Entities.PO", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PODate")
                        .HasColumnType("TEXT");

                    b.Property<int>("SupplierID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("POs");
                });

            modelBuilder.Entity("API.Entities.PODetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ItemBarcode")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemName")
                        .HasColumnType("TEXT");

                    b.Property<int>("POID")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Qty")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.ToTable("PODetails");
                });

            modelBuilder.Entity("API.Entities.Promot", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PromotionID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Promots");
                });

            modelBuilder.Entity("API.Entities.PromotDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("DeductionAmount")
                        .HasColumnType("REAL");

                    b.Property<float>("DeductionPrice")
                        .HasColumnType("REAL");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ItemBarcode")
                        .HasColumnType("TEXT");

                    b.Property<float>("SalesAmount")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.ToTable("PromotDetails");
                });

            modelBuilder.Entity("API.Entities.Promotion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("API.Entities.SalesOrder", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("DeliveryEmpID")
                        .HasColumnType("REAL");

                    b.Property<string>("SalesDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("SalesTime")
                        .HasColumnType("TEXT");

                    b.Property<float>("TotalAmount")
                        .HasColumnType("REAL");

                    b.Property<int>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("SalesOrders");
                });

            modelBuilder.Entity("API.Entities.SalesOrderDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ItemBarcode")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemName")
                        .HasColumnType("TEXT");

                    b.Property<float>("LineDeduction")
                        .HasColumnType("REAL");

                    b.Property<int>("PromotID")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Qty")
                        .HasColumnType("REAL");

                    b.Property<float>("SalePrice")
                        .HasColumnType("REAL");

                    b.Property<int>("SalesOrderID")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Total")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.ToTable("salesOrderDetails");
                });

            modelBuilder.Entity("API.Entities.Supplier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContactsInfo")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("RegNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("API.Entities.Unit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Units")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("API.Entities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phones")
                        .HasColumnType("TEXT");

                    b.Property<string>("Whatsapp")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
